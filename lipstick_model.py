# -*- coding: utf-8 -*-
"""lipstick_model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NmZ_tso2eDcJPOBKMi9P5IjWnKsyYdMY
"""

import pandas as pd
from sklearn import svm
from sklearn.model_selection import GridSearchCV

def getdata():
  link = 'https://raw.githubusercontent.com/farisknight13/DataMining/main/dataset_lipstick.csv'
  df = pd.read_csv(link)
  return df

def split_data(dat):
  dat = dat.loc[(dat["1"] != "2") & (dat["1"] != "7")]
  return dat

def split_data_and_label(dat):
	label = dat['1'].values
	feat = dat.drop('1',axis=1)
	return label,feat

def feature_extraction(featMat):
  encode = ['2','3','4','5','6','7','8','9','10','11','12','13','15']
  for col in encode:
    dummy = pd.get_dummies(featMat[col], prefix=col)
    featMat = pd.concat([featMat,dummy], axis=1)
    del featMat[col]
  #featMat = featMat[:1] # Selects only the first row (the user input data)
  return  featMat

def trainclassifer(feature,label):
  parameters = {'kernel':('linear', 'rbf'), 'C':[1, 10]}
  svc = svm.SVC(decision_function_shape='ovr')
  mod = GridSearchCV(svc,parameters,cv=10)
  feature = feature.iloc[:,[3,4,6,7,8,9,10,12,25,27,34,38,39,40,41,42,43,45]]
  mod.fit(feature, label)
  return mod

tldat = getdata()
tldat["1"].replace({"ลิปเนื้อแมตต์" : "1", "ลิปเนื้อครีม" : "2", "ลิปเนื้อซาตินและเนื้อเชียร์" : "3", "ลิควิดลิปสติก หรือ ลิปจิ้มจุ่ม" : "4", "ลิปกลอสและลิปทินส์" : "5", "ลิปมันและลิปบาล์ม" : "6", "ลิปไลเนอร์" : "7"},inplace=True)
tldat = split_data(tldat)
trainLabel,trainDat = split_data_and_label(tldat)

trainFeat = feature_extraction(trainDat)

#return trainFeat,testFeat
#cFeat = list(set(list(trainFeat.columns.values)).intersection(list(testFeat.columns.values)))
#trainFeat = trainFeat[cFeat]
#testFeat = testFeat[cFeat]
mod = trainclassifer(trainFeat,trainLabel)
test = [[0,1,0,0,0,1,0,0,0,1,0,1,0,0,1,1,0,1]]
pre = mod.predict(test)
print(pre)

# Saving the model
import pickle
pickle.dump(mod, open('LipsStick_clf_finish_final_superfinal.pkl', 'wb'))